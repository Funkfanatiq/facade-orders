from flask import Flask, render_template, redirect, url_for, request, flash, session, jsonify, send_from_directory 
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from flask_migrate import Migrate
from datetime import datetime, timedelta, timezone
import os
from dotenv import load_dotenv

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
URGENT_DAYS_THRESHOLD = 3  # –î–Ω–µ–π –¥–æ —Å—Ä–æ–∫–∞ –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
SHEET_AREA = 2.75 * 2.05  # –ü–ª–æ—â–∞–¥—å –ª–∏—Å—Ç–∞ –≤ –º¬≤ (5.6375)
MAX_FILE_SIZE = 16 * 1024 * 1024  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (16MB)
EXPIRED_DAYS = 180  # –î–Ω–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∑–∞–∫–∞–∑–æ–≤

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
ALLOWED_EXTENSIONS = {'pdf', 'png', 'jpg', 'jpeg', 'gif', 'txt', 'doc', 'docx', 'xls', 'xlsx', 'dwg', 'dxf'}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

app = Flask(__name__)
app.config.from_object('config.Config')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Flask
from models import db, User, Order, Employee, WorkHours, SalaryPeriod
db.init_app(app)
migrate = Migrate(app, db)

login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = "login"

os.makedirs(app.config["UPLOAD_FOLDER"], exist_ok=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        try:
            print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
            db.create_all()
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            user_count = User.query.count()
            print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {user_count}")
            
            if user_count == 0:
                print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
                
                # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                manager = User(
                    username='manager',
                    password=User.hash_password('5678'),
                    role='–ú–µ–Ω–µ–¥–∂–µ—Ä'
                )
                db.session.add(manager)
                
                # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
                admin = User(
                    username='admin',
                    password=User.hash_password('admin123'),
                    role='–ê–¥–º–∏–Ω'
                )
                db.session.add(admin)
                
                # –°–æ–∑–¥–∞–µ–º –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                users_data = [
                    ('worker', '0000', '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ'),
                    ('cutter', '7777', '–§—Ä–µ–∑–µ—Ä–æ–≤–∫–∞'),
                    ('polisher', '8888', '–®–ª–∏—Ñ–æ–≤–∫–∞'),
                    ('monitor', '9999', '–ú–æ–Ω–∏—Ç–æ—Ä')
                ]
                
                for username, password, role in users_data:
                    user = User(
                        username=username,
                        password=User.hash_password(password),
                        role=role
                    )
                    db.session.add(user)
                
                db.session.commit()
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã")
            else:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            
            print("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            import traceback
            traceback.print_exc()

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
init_database()

def allowed_file(filename):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —Ç–∏–ø —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"""
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def secure_filename_custom(filename):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π"""
    import re
    # –£–¥–∞–ª—è–µ–º –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    filename = re.sub(r'[^\w\-_\.]', '_', filename)
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
    if len(filename) > 100:
        name, ext = os.path.splitext(filename)
        filename = name[:95] + ext
    return filename

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
# (–∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–∑ app.py)
